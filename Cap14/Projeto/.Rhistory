x <- rnorm(1000, 3, .25)
Azure <- FALSE
getwd()
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("src/Tools.R")
bikes <- read.csv("bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("src/Tools.R")
bikes <- read.csv("bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
>
bikes <- read.csv("bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
source("src/Tools.R")
setwd("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto")
getwd()
source(".../src/Tools.R")
bikes <- read.csv(".../bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
cols <- c("dteday", "mnth", "hr", "holiday",
"workingday", "weathersit", "temp",
"hum", "windspeed", "cnt")
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
Azure <- FALSE
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
getwd()
getwd()
setwd("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto")
#
Azure <- FALSE
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
# Selecionar as variáveis que serão usadas
cols <- c("dteday", "mnth", "hr", "holiday",
"workingday", "weathersit", "temp",
"hum", "windspeed", "cnt")
+
-
Azure <- FALSE
setwd("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto")
#
Azure <- FALSE
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
end
close
aaaa
q()
Azure <- FALSE
getwd()
if(Azure){
source("src/Tools.R")
bikes <- maml.mapInputPort(1)
bikes$dteday <- set.asPOSIXct(bikes)
}else{
source("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/src/Tools.R")
bikes <- read.csv("C:/Users/conta/OneDrive/Documentos/DataScience/BIG_DATA_R_AZURE/Cap14/Projeto/bikes.csv", sep = ",", header = TRUE, stringsAsFactors = FALSE )
# Selecionar as variáveis que serão usadas
cols <- c("dteday", "mnth", "hr", "holiday",
"workingday", "weathersit", "temp",
"hum", "windspeed", "cnt")
# Criando um subset dos dados
bikes <- bikes[, cols]
# Transformar o objeto de data
bikes$dteday <- char.toPOSIXct(bikes)
# Esta linha acima gera dois valores NA
# Esta linha abaixo corrige
bikes <- na.omit(bikes)
# Normalizar as variaveis preditoras numericas
cols <- c("temp", "hum", "windspeed")
bikes[, cols] <- scale(bikes[, cols])
}
bikes$isWorking <- ifelse(bikes$workingday & !bikes$holiday, 1, 0)
bikes <- month.count(bikes)
bikes$dayWeek <- as.factor(weekdays(bikes$dteday))
View(bikes)
bikes$dayWeek <- as.numeric(ordered(bikes$dayWeek,
levels = c("segunda-feira",
"terça-feira",
"quarta-feira",
"quinta-feira",
"sexta-feira",
"sábado",
"domingo")))
str(bikes$dayWeek)
str(bikes$dayWeek)
str(bikes)
View(bikes)
bikes$workTime <- ifelse(bikes$isWorking, bikes$hr, bikes$hr + 24)
bikes$xformHr <- ifelse(bikes$hr > 4, bikes$hr - 5, bikes$hr + 19)
bikes$xformWorkHr <- ifelse(bikes$isWorking, bikes$xformHr, bikes$xformHr + 24)
